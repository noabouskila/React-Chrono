{"version":3,"sources":["Images/pause.svg","Images/play.svg","Images/reset.svg","Chrono/Chrono.js","App.js","index.js"],"names":["Chrono","useState","sessionTime","setSessionTime","sessionTimeFixed","setSessionTimeFixed","breakTime","setBreakTime","breakTimeFixed","setBreakTimeFixed","workingChrono","setWorkingChrono","useEffect","id","window","setInterval","console","log","dispatch","type","clearInterval","useReducer","state","action","handleSession","e","target","classList","contains","handleBreak","className","onClick","Math","trunc","src","PauseImg","PlayImg","alt","ResetImg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,kC,OCM1B,SAASA,IAAS,MAGQC,mBAAS,KAHjB,mBAGxBC,EAHwB,KAGVC,EAHU,OAMkBF,mBAAS,KAN3B,mBAMxBG,EANwB,KAMLC,EANK,OASIJ,mBAAS,IATb,mBASxBK,EATwB,KASZC,EATY,OAYcN,mBAAS,IAZvB,mBAYxBO,EAZwB,KAYPC,EAZO,OAeYR,oBAAS,GAfrB,mBAexBS,EAfwB,KAeRC,EAfQ,KAwB/BC,qBAAU,WACR,IAAIC,EAUJ,OATGH,IACDG,EAAKC,OAAOC,aAAY,WAEtBC,QAAQC,IAAI,eACZC,EAAS,CAACC,KAAO,WAEjB,MAGG,WACLL,OAAOM,cAAcP,MAGvB,CAACH,IAvC4B,MA2CJW,sBAE3B,SAAiBC,EAAQC,GACvB,OAAOA,EAAOJ,MAEZ,IAAK,OACFjB,GAAc,EACfC,EAAeD,EAAa,GAEtBI,GAAY,EAClBC,EAAaD,EAAW,GAElBJ,GAAc,GAAKI,GAAW,IACpCH,EAAeC,GACfG,EAAaC,IAEf,MACA,QAASQ,QAAQC,IAAI,uCA5DM,mBA2ChBC,GA3CgB,WAiE/B,IAAMM,EAAgB,SAACC,GACVA,EAAEC,OACPC,UAAUC,SAAS,SACpB1B,EAAa,GAAK,GACnBG,EAAoBD,EAAkB,IACtCD,EAAeD,EAAa,IAC5Bc,QAAQC,IAAI,kBAGZZ,EAAoBD,GACpBD,EAAeD,KAIjBG,EAAoBD,EAAmB,IACvCD,EAAeD,EAAc,IAC7Bc,QAAQC,IAAI,iBAKVY,EAAc,SAACJ,GACRA,EAAEC,OAEPC,UAAUC,SAAS,SACpBpB,EAAe,GAChBC,EAAkBD,EAAgB,IAClCD,EAAaD,EAAY,IACzBU,QAAQC,IAAI,gBAGZR,EAAkBD,GAClBD,EAAaD,KAIfG,EAAkBD,EAAiB,IACnCD,EAAaD,EAAY,IACzBU,QAAQC,IAAI,eAahB,OACE,sBAAKa,UAAWpB,EAAgB,6BAA+B,mBAA/D,UACE,sBAAKoB,UAAU,mBAAf,UAGE,sBAAKA,UAAU,mBAAf,UACE,wBAAQA,UAAU,QAAQC,QAASP,EAAnC,eAKA,+BAAOpB,EAAmB,KAE1B,wBAAQ0B,UAAU,OAAOC,QAASP,EAAlC,kBAMF,sBAAKM,UAAU,iBAAf,UACE,wBAAQA,UAAU,QAAQC,QAASF,EAAnC,eAIA,+BAAOrB,EAAiB,KAExB,wBAAQsB,UAAU,OAAOC,QAASF,EAAlC,qBAMJ,6BACG3B,GAAc,EAEX,yCACM8B,KAAKC,MAAM/B,EAAc,IAD/B,cACwCA,EAAc,GAAI,GAAlB,WACtCA,EAAY,IAD0B,UAChBA,EAAY,OAGpC,yCACM8B,KAAKC,MAAM3B,EAAY,IAD7B,cACsCA,EAAY,GAAI,GAAhB,WAClCA,EAAU,IADwB,UACdA,EAAU,SAOxC,sBAAKwB,UAAU,wBAAf,UACE,wBAAQC,QApJI,WAChBpB,GAAkBD,IAmJd,SACE,qBAAKwB,IAAKxB,EAAgByB,EAAWC,EAASC,IAAI,OAEpD,wBAAQN,QA9DI,WACbrB,IACDC,GAAkBD,GAClBM,QAAQC,IAAI,8CAEdd,EAAeC,GACfY,QAAQC,IAAI,UAwDR,SACE,qBAAKiB,IAAKI,EAAUD,IAAI,aCtKnBE,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCANU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.63dd6c2d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pause.f8c47a1a.svg\";","export default __webpack_public_path__ + \"static/media/play.b23df41a.svg\";","export default __webpack_public_path__ + \"static/media/reset.adefad1d.svg\";","import React , {useState, useEffect , useReducer} from 'react'\r\nimport \"./Chrono.css\"\r\nimport PauseImg from \"../Images/pause.svg\"\r\nimport PlayImg from \"../Images/play.svg\"\r\nimport ResetImg from \"../Images/reset.svg\"\r\n\r\nexport default function Chrono() {\r\n\r\n  // state de la session qui se decompte: etat initialisé a 25min => 1500 (1500/60)\r\n  const [sessionTime , setSessionTime] = useState(120)\r\n\r\n  // state de la session fixe: etat initialisé a 25min => 1500 (1500/60)\r\n  const [sessionTimeFixed , setSessionTimeFixed] = useState(120)\r\n\r\n  // state du temps de pause break qui se decompte de 5 min => 300 (300/60)\r\n  const [breakTime , setBreakTime] = useState(60)\r\n\r\n  // state du temps de pause break fixe de 5 min => 300 (300/60)\r\n  const [breakTimeFixed , setBreakTimeFixed] = useState(60)\r\n\r\n  // state pour faire tourner le chrono play et pause et reset => demarré a false : non demarré\r\n  const [workingChrono , setWorkingChrono] = useState(false)\r\n\r\n  // toggle  bouton play pause !workingChrono = toggle\r\n  const playPause = () => {\r\n    setWorkingChrono(!workingChrono) \r\n  }\r\n\r\n  // useEffect  gestion du montage et demontage du composant => a chaque fois que le composant est monté , effectuer qqchose puis le demonter \r\n  // le useeffect englobe le changement de state quand il ya un settime ou setinterval ... \r\n  useEffect(()=>{\r\n    let id;\r\n    if(workingChrono){\r\n      id = window.setInterval(() => {\r\n\r\n        console.log(\"hello timer\")\r\n        dispatch({type : \"TICK\"})\r\n\r\n      },1000);\r\n    }\r\n    // nettoyer setinterval au demontage du composant : cleanup function\r\n    return ()=>{\r\n      window.clearInterval(id)\r\n    }\r\n\r\n  },[workingChrono])\r\n\r\n  // useReducer : gerer plusieurs changment detat a l'exterieur du useEffect \r\n\r\n  const [state , dispatch] = useReducer(reducer)\r\n\r\n  function reducer(state , action){\r\n    switch(action.type){\r\n\r\n      case \"TICK\" : \r\n      if(sessionTime>= 0){\r\n        setSessionTime(sessionTime -1)\r\n      }\r\n      else if(breakTime >=1){\r\n        setBreakTime(breakTime -1)\r\n      }\r\n      else if(sessionTime<= 0 && breakTime<=0){\r\n        setSessionTime(sessionTimeFixed)\r\n        setBreakTime(breakTimeFixed)\r\n      }\r\n      break;\r\n      default: console.log(\"ne rentre dans aucune condition\")\r\n    }\r\n  }\r\n\r\n  // SESSION MINUS\r\n  const handleSession = (e) => {\r\n    const el = e.target\r\n    if(el.classList.contains('minus') ){\r\n      if(sessionTime/ 60 > 1){\r\n        setSessionTimeFixed(sessionTimeFixed -60)\r\n        setSessionTime(sessionTime -60)\r\n        console.log(\"sessionminus\")\r\n      }\r\n      else{\r\n        setSessionTimeFixed(sessionTimeFixed)\r\n        setSessionTime(sessionTime)\r\n      }\r\n    }\r\n    else{\r\n      setSessionTimeFixed(sessionTimeFixed + 60)\r\n      setSessionTime(sessionTime + 60)\r\n      console.log(\"sessionplus\")\r\n    }\r\n  }\r\n\r\n  // BREAK MINUS\r\n  const handleBreak = (e) => {\r\n    const el = e.target\r\n\r\n    if(el.classList.contains(\"minus\")){\r\n      if(breakTimeFixed>1){\r\n        setBreakTimeFixed(breakTimeFixed -60)\r\n        setBreakTime(breakTime - 60)\r\n        console.log(\"breakminus\")\r\n      }\r\n      else{\r\n        setBreakTimeFixed(breakTimeFixed)\r\n        setBreakTime(breakTime)\r\n      }\r\n    }\r\n    else{\r\n      setBreakTimeFixed(breakTimeFixed + 60)\r\n      setBreakTime(breakTime + 60)\r\n      console.log(\"breakplus\")\r\n    }\r\n  }\r\n  \r\n  const resetFunc = () =>{\r\n    if(workingChrono){\r\n      setWorkingChrono(!workingChrono)\r\n      console.log(\" arrete le chrono : workingChrono : false\")\r\n    }\r\n    setSessionTime(sessionTimeFixed)\r\n    console.log(\"reset\")\r\n  }\r\n\r\n  return (\r\n    <div className={workingChrono ? \"container-chrono anim-glow\" : \"container-chrono\" }>\r\n      <div className=\"container-config\">\r\n\r\n        {/* SESSION */}\r\n        <div className=\"box-btns session\">\r\n          <button className=\"minus\" onClick={handleSession}>\r\n            -\r\n          </button>\r\n\r\n          {/* session fixe :  */}\r\n          <span>{sessionTimeFixed / 60}</span> \r\n\r\n          <button className=\"plus\" onClick={handleSession}>\r\n            +\r\n          </button>\r\n        </div>\r\n\r\n        {/* BREAK */}\r\n        <div className=\"box-btns break\">\r\n          <button className=\"minus\" onClick={handleBreak}>\r\n            -\r\n          </button>\r\n          {/* session fixe :  */}\r\n          <span>{breakTimeFixed / 60}</span> \r\n\r\n          <button className=\"plus\" onClick={handleBreak}>\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <h1> \r\n        {sessionTime >=0\r\n          ?(\r\n            <span>\r\n              {`${Math.trunc(sessionTime / 60)} : ${sessionTime % 60 <10 ? `0${\r\n              sessionTime%60}` : `${sessionTime%60}`}`}\r\n            </span>\r\n          ):(\r\n            <span>\r\n              {`${Math.trunc(breakTime / 60)} : ${breakTime % 60 <10 ? `0${\r\n                breakTime%60}` : `${breakTime%60}`}`}\r\n            </span>\r\n          )\r\n        }\r\n      </h1>\r\n\r\n      {/* Boutons controller play/pause  ET reset */}\r\n      <div className=\"container-controllers\">\r\n        <button onClick={playPause}>\r\n          <img src={workingChrono ? PauseImg : PlayImg} alt=\"\"/>\r\n        </button>\r\n        <button onClick={resetFunc}>\r\n          <img src={ResetImg} alt=\"\"/>\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import Chrono from './Chrono/Chrono'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Chrono/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}